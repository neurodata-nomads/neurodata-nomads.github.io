{
  "_args": [
    [
      {
        "raw": "detect-passive-events@^1.0.4",
        "scope": null,
        "escapedName": "detect-passive-events",
        "name": "detect-passive-events",
        "rawSpec": "^1.0.4",
        "spec": ">=1.0.4 <2.0.0",
        "type": "range"
      },
      "/Users/bijanvarjavand/Envs/spring18/ndd/neurodata-nomads.github.io/node_modules/detect-it"
    ]
  ],
  "_from": "detect-passive-events@>=1.0.4 <2.0.0",
  "_id": "detect-passive-events@1.0.4",
  "_inCache": true,
  "_location": "/detect-passive-events",
  "_nodeVersion": "6.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/detect-passive-events-1.0.4.tgz_1506449460026_0.20262566534802318"
  },
  "_npmUser": {
    "name": "rafrex",
    "email": "code@rafrex.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "detect-passive-events@^1.0.4",
    "scope": null,
    "escapedName": "detect-passive-events",
    "name": "detect-passive-events",
    "rawSpec": "^1.0.4",
    "spec": ">=1.0.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/detect-it"
  ],
  "_resolved": "https://registry.npmjs.org/detect-passive-events/-/detect-passive-events-1.0.4.tgz",
  "_shasum": "6ed477e6e5bceb79079735dcd357789d37f9a91a",
  "_shrinkwrap": null,
  "_spec": "detect-passive-events@^1.0.4",
  "_where": "/Users/bijanvarjavand/Envs/spring18/ndd/neurodata-nomads.github.io/node_modules/detect-it",
  "author": {
    "name": "Rafael Pedicini",
    "email": "code@rafrex.com"
  },
  "bugs": {
    "url": "https://github.com/rafrex/detect-passive-events/issues"
  },
  "dependencies": {},
  "description": "Detect if the browser supports passive events",
  "devDependencies": {
    "babel-cli": "^6.23.0",
    "babel-eslint": "^7.1.1",
    "babel-preset-es2015": "^6.22.0",
    "eslint": "^3.16.1",
    "eslint-config-airbnb-base": "^10.0.1",
    "eslint-plugin-import": "^2.2.0"
  },
  "directories": {},
  "dist": {
    "shasum": "6ed477e6e5bceb79079735dcd357789d37f9a91a",
    "tarball": "https://registry.npmjs.org/detect-passive-events/-/detect-passive-events-1.0.4.tgz"
  },
  "files": [
    "lib",
    "src"
  ],
  "gitHead": "6f03f9367bdbad77c1251e98ba8f04fdb5b32568",
  "homepage": "https://github.com/rafrex/detect-passive-events#readme",
  "keywords": [
    "detect",
    "passive",
    "passive events"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "rafrex",
      "email": "code@rafrex.com"
    }
  ],
  "name": "detect-passive-events",
  "optionalDependencies": {},
  "readme": "# Detect Passive Events\n\nDetect if the browser supports passive event listeners.\n\n[Live detection test][liveDetectionTest]\n\nExports a reference to a singleton object (a micro state machine with an update function) with its state set to if the browser supports passive event listeners, as well as an `update()` function which re-runs the tests and updates the object's state.\n\n*Note that the code used in the detection is adapted from this [Passive Events Explainer][passiveExplainer].*\n\n\n### `detectPassiveEvents` micro state machine\n```javascript\nconst detectPassiveEvents = {\n  hasSupport: boolean,\n\n  // re-run the detection tests and update state\n  update() {...},\n}\n```\n\n### Installing `detect-passive-events`\n```terminal\n$ npm install detect-passive-events\n```\n\n### Using `detect-passive-events`\n```javascript\nimport detectPassiveEvents from 'detect-passive-events';\n```\n```javascript\n// passive events are supported by the browser\nif (detectPassiveEvents.hasSupport === true) {\n  // set listeners like this\n  document.addEventListener('scroll', handleScroll, { capture: false, passive: true });\n}\n\n// passive events are not supported by the browser\nif (detectPassiveEvents.hasSupport === false) {\n  // set listeners like this\n  document.addEventListener('scroll', handleScroll, false);\n}\n\n// updating the state - most apps won't need to use this at all\ndetectPassiveEvents.update();\n```\n\nNote that the `update()` function is run once at the time of import to set the object's initial state, and generally doesn't need to be run again. If it doesn't have access to the `window`, then the state will be `undefined` (`detect-passive-events` will not throw an error), and you will need to call the `update()` function manually at a later time to update its state.\n\n\n### Part of the [`detect-it`][detectItRepo] family\n- [`detect-it`][detectItRepo]\n  - [`detect-hover`][detectHoverRepo]\n  - [`detect-pointer`][detectPointerRepo]\n  - [`detect-touch-events`][detectTouchEventsRepo]\n  - **`detect-passive-events`**\n\n\n<!-- links -->\n[liveDetectionTest]: http://detect-it.rafrex.com/#detect-passive-events\n[passiveExplainer]: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n[detectItRepo]: https://github.com/rafrex/detect-it\n[detectHoverRepo]: https://github.com/rafrex/detect-hover\n[detectPointerRepo]: https://github.com/rafrex/detect-pointer\n[detectTouchEventsRepo]: https://github.com/rafrex/detect-touch-events\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rafrex/detect-passive-events.git"
  },
  "scripts": {
    "build": "rm -rf lib && babel src --presets babel-preset-es2015 -d lib",
    "prepublish": "npm run build"
  },
  "version": "1.0.4"
}
